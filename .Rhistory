xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(1,1,1,1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(10,10,10,10))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(0.1,0.1,0.1,0.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(3.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(4.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(6.1,3.1,3.1,2.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(6.1,6.1,6.1,6.1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(1,1,1,1))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
?mar
?par
par(mai=c(1.02,0.82,0.82,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(0.5,0.52,0.52,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(0.7,0.72,0.72,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(1,1,1,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mai=c(1.5,1.5,1.5,0.42))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(5,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(1,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(2,2,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1,mgp=c(1,1,0))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2)+0.1)
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
par(mar=c(5,6,4,2))
likelihood <- curve((1-x)^28, cex.main=0.8, cex.lab=0.8, cex.axis=0.8,
xlab = expression(pi),
ylab = "Likelihood",
main = expression(paste("Likelihood as a function of ", pi)))
Income = 1:3
Not = c(6, 6, 6)
Pretty = c(43, 113, 57)
Very = c(75, 178, 117)
library(VGAM)
install.packages(VGAM)
install.packages('VGAM'')
)
''
install.packages('VGAM')
library(VGAM)
fit1 = vglm(cbind(Not, Pretty, Very)~Income, family=multinomial)
summary(fit1)
fit2 = vglm(cbind(Not, Pretty, Very)~Income, family=cumulative(parallel=TRUE))
summary(fit2)
library('rfishbase')
chaets <- species_list(Family = "Chaetodontidae")
poms <- species_list(Family = "Pomacentridae")
labs <- species_list(Family = "Labridae")
head(poms)
list_fields("Depth")
list_fields("Length")
list_fields("diet")
list_fields("Diet)
")"
)
)
))
""
list_fields("Diet")
test <- species(species_all[[1]], fields = c("Length", "Depth", "Diet"))
species_all <- list(chaets, poms, labs)
test <- species(species_all[[1]], fields = c("Length", "Depth", "Diet"))
head(test)
lump <- stocks(species_all[[1]], fields = c("Length", "Depth", "Diet"))
head(lump)
lump <- stocks(species_all[[1]], fields ="Length")
lump <- stocks(species_all[[1]][1:10], fields ="Diet")
lump
list_fields("Diet")
lump <- ecology(species_all[[1]][1:10], fields ="DietTroph")
lump
lump <- ecology(species_all[[1]][1:10], fields ="DietRemark")
lump
lump <- diet(species_all[[1]][1:10], fields ="DietCode")
warnings()
lump
lump <- dbl(species_all[[1]][1:10], fields ="DietPercent")
lump <- diet(species_all[[1]][1:10], fields ="DietPercent")
lump
lump <- diet(species_all[[1]][1:10])
lump
list_fields("Diet")
lump <- diet(species_all[[1]][1:10], field = "FoodI")
lump
lump <- diet(species_all[[1]][1:10], fields = "FoodI")
lump
list_fields("Food")
lump <- fooditems(species_all[[1]][1:10], fields = "FoodI")
lump <- fooditems(species_all[[1]][1:10])
lump
lump <- fooditems(species_all[[1]][1:10], fields = "FoodI")
lump <- diet(species_all[[1]][1:10], fields = "FoodI")
lump
lump <- ecology(species_all[[1]][1:10], fields = "FoodI")
lump
lump <- diet(species_all[[1]][1:10], fields = "MainFood")
lump
lump <- fooditems(species_all[[1]][1:10])
lump
lump$FoodI
lump$autoctr
lump$PreyStage
new <- data.frame(food = lump$FoodI, stage = lump$PreyStage, sciname = lump$sciname)
new
lump <- fooditems(species_all[[1]][1:10], fields = c("FoodI", "PreyStage", "sciname"))
lump
lump <- fooditems(species_all[[1]][1:10], fields = c("FoodI", "FoodII", "FoodIII", "PreyStage", "sciname"))
lump <- fooditems(species_all[[1]][1:10], fields = c("FoodI", "FoodII", "FoodIII", "PredatorStage", "sciname"))
lump
list_fields("Predator")
lump <- fooditems(species_all[[1]][1:10], fields = c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage"))
lump
lump$PredatorStage
View(lump)
species_all <- apply(savenames, species_list(Family = savenames))
species_all <- apply(savenames, species_list)
?apply
species_all <- apply(savenames, function(x) species_list(Family = x))
species_all <- apply(savenames, function(x) {species_list(Family = x)})
species_all <- apply(savenames, 1, function(x) {species_list(Family = x)})
savenames <- c("Chaetodontidae", "Pomacentridae", "Labridae")
species_all <- apply(savenames, 1, function(x) {species_list(Family = x)})
species_all <- apply(savenames, 1, function(x) species_list(Family = x))
species_all <- apply(savenames, function(x) species_list(Family = x))
savenames
families <- c("Chaetodontidae", "Pomacentridae", "Labridae")
species_all <- list()
for (i in 1:length(families)) {
species_all[[i]] <- species_list(Family = families[i])
}
species_all[[1]]
fields = c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage")
list_fields("Depth")
list_fields("Depth")
list_fields("Size")
list_fields("Length")
list_fields("Common")
list_fields("Max")
list_fields("MaxLength")
size_depth_fields <- c("DepthRangeShallow", "DepthRangeDeep", "CommonLength")
diet_fields <- c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage")
families <- c("Chaetodontidae", "Pomacentridae", "Labridae")
diet_fields <- c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage")
size_depth_fields <- c("DepthRangeShallow", "DepthRangeDeep", "CommonLength")
species_names <- list()
species_info <- list()
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
species_info[[i]] <- merge(species_names[[i]], fooditems(species_names[[i]], fields = diet_fields),
species(species_names[[i]], fields = depth_fields))
}
size_depth_fields <- c("DepthRangeShallow", "DepthRangeDeep", "CommonLength")
species_names <- list()
species_info <- list()
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
species_info[[i]] <- merge(species_names[[i]], fooditems(species_names[[i]], fields = diet_fields),
species(species_names[[i]], fields = size_depth_fields))
}
species_names <- list()
diet_info <- list()
size_depth_info <- list()
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
diet_info[[i]] <- fooditems(species_names[[i]], fields = diet_fields)
size_depth_info[[i]] <- species(species_names[[i]], fields = size_depth_fields)
}
head(warnings())
species_names <- list()
diet_info <- list()
size_depth_info <- list()
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
diet_info[[i]] <- fooditems(species_names[[i]][1:10], fields = diet_fields)
size_depth_info[[i]] <- species(species_names[[i]][1:10], fields = size_depth_fields)
}
warnings()
diet_info[[1]]
size_depth_info[[1]]
list_fields("Length")
species(species_names[[1]][1:10], fields = "Length")
species("Stegastes nigricans", fields = "Length")
species("Stegastes nigricans", fields = "CommonLength")
library('rfishbase')
list_fields("Depth")
families <- c("Chaetodontidae", "Pomacentridae", "Labridae")
diet_fields <- c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage", "sciname")
size_depth_fields <- c("DepthRangeShallow", "DepthRangeDeep", "Length", "CommonLength", "sciname")
species_names <- list()
diet_info <- list()
size_depth_info <- list()
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
diet_info[[i]] <- fooditems(species_names[[i]][1:10], fields = diet_fields)
size_depth_info[[i]] <- species(species_names[[i]][1:10], fields = size_depth_fields)
}
warnings()
diet_info[[1]]
diet_info[[2]]
diet_info[[3]]
size_depth_info[[1]]
size_depth_info[[2]]
size_depth_info[[3]]
merge(diet_info[[1]], size_depth_info[[1]])
paste(families[1], ".csv", sep="")
for (i in 1:length(families)) {
species_names[[i]] <- species_list(Family = families[i])
diet_info[[i]] <- fooditems(species_names[[i]], fields = diet_fields)
size_depth_info[[i]] <- species(species_names[[i]], fields = size_depth_fields)
species_info[[i]] <- merge(diet_info[[i]], size_depth_info[[i]])
write.csv(species_info[[i]], paste(families[i], ".csv", sep=""))
}
getwd()
library(rfishbase)
species_list(Family = 'Balistidae')
test = species_list(Family = 'Balistidae')
fbdata <- species(test)
ls(fbdata)
fbdata <- ecosystem(test)
butterflyfishes <- species_list("Chaetodontidae")
butterflyfishes
butterflyfishes <- species_list(family = "Chaetodontidae")
butterflyfishes <- species_list(Family = "Chaetodontidae")
butterflyfishes
temp <- fooditems(butterflyfishes)
head(temp)
diet_fields <- c("FoodI", "FoodII", "FoodIII", "sciname", "PredatorStage", "Commoness")
temp <- fooditems(butterflyfishes, fields = diet_fields)
?commandArgs
species_list(Family = "Banjosidae")
library(rfishase)
library(rfishbase)
species_list(Family = "Banjosidae")
install.packages("jsonlite")
library(jsonlite)
install.packages('VGAM')
library('VGAM')
library('rfishbase')
wrasses <- c("Labridae", "Scaridae", "Odacidae")
wrasses <- species_list(Family = wrasses)
wrasses <- apply(wrasses, 1, function(x) {species_list(Family = x)})
wrasses <- apply(wrasses, function(x) {species_list(Family = x)})
wrasses <- apply(wrasses, 1, function(x) {species_list(Family = x)})
?apply
wrasses <- apply(wrasses, 1:3, function(x) {species_list(Family = x)})
wrasses <- apply(wrasses, 1, function(x) species_list(Family = x))
dim(wrasses)
?vapply
wrasses <- lapply(wrasses, function(x) species_list(Family = x))
wrasses[[1]]
wrasses
library('rfishbase')
wrasses <- c("Labridae", "Scaridae", "Odacidae")
test <- lapply(wrasses, function(x) species_list(Family = x))
test
wrassFamilies <- c("Labridae", "Scaridae", "Odacidae")
wrasses <- lapply(wrassFamilies, function(x) species_list(Family = x))
wrasses
wrasses[[1]][1]
species(wrasses[[1]][1])
source('~/Dropbox/Westneat_Lab/Diet_Data/doodling.R')
test <- species(wrasses[[1]][1])
ls(test)
length(ls(test))
test$Aquarium
list_fields("Econ")
list_fields("Economic")
list_fields("Length")
list_fields("Vulnerability")
test$Vulnerability
list_fields("IUCN")
stockTest <- stocks(wrasses[[1]][1])
stockTest
stockTest <- stocks(wrasses[[1]][1], fields="IUCN_Code")
stockTest
list_fields("Resilience")
stockTest <- stocks(wrasses[[1]][1])
stockTest$Resilience
list_fields("Stamp")
list_fields("Stamps")
list_fields("Coins")
humphead <- "Cheilinus undulatus"
test <- species(humphead)
stockTest <- stocks(humphead)
stockTest$IUCN_Code
ecology(humphead)
list_fields("Aquarium")
speciesFields <- c("Aquarium", "AquariumFishII")
speciesTest <- species(humphead, fields = speciesFields)
speciesTest
speciesTest$AquariumFishII
speciesTest <- species(wrasses[[3]], fields = speciesFields)
speciesTest
speciesTest <- species("Carassius auratus", fields = speciesFields)
speciesTest
list_fields("Resilience")
list_fields("Fisheries")
countref(humphead)
list_fields("Fish")
list_fields("species")
Fish
list_fields("Fish")
test <- species(humphead)
ls(test)
test$AnaCat
test$Vulnerability
stockTest <- stocks(humphead)
ls(stockTest)
stockTest$IUCN_Assessment
stockTest$IUCN_ID
stockTest$IUCN_Code
stockTest$IUCN_Group
stockTest$Catches
list_fields("Price")
stockFields <- c("IUCN_Code", "Resilience", "Vulnerability", "PriceCateg")
test$Remark
test$Importance
ls(test)
test$Profile
list_fields("depth")
list_fields("Depth")
list_fields("Size")
list_fields("Length")
x<-list_fields("Length")
print(x)
x[1:41,]
print(x[1:41,])
open(x)
x[11,]
x[11:41,]
x[21:31,]
x[31:41,]
test$FBname
test$BodyShapeI
test$Remark
test$DemersPelag
test$Vulnerability
test$Saltwater
test$Brack
test$LongevityWild
test$Weigt
test$Weight
test$Importance
test$PriceCateg
test$PriceReliability
test$Remarks7
test$LandingStatistics
test$Landings
test$MainCatchingMethod
test$II
test$LifeCycle
test$Emblematic
test$Comments
test$UsedasBait
test$Dangerous
test$TS
stockTest$StockDefs
stockTest$StockDefsGeneral
stockTest$Level
stockTest$LocalUnique
stockTest$Protected
stockTest$CITES_Code
stockTest$CITES_Remarks
stockTest$ICESStockID
stockTest$Foods
stockTest$Ecology
speciesFields <- c("Aquarium", "AquariumFishII", "Importance",
"DepthRangeDeep", "DepthRangeShallow",
"Length", "CommonLength", "BodyShapeI",
"DemersPelag", "Vulnerability", "LongevityWild",
"Weight", "PriceCateg", "PriceReliability", "Comments")
# Endangered? Resilience?
stockFields <- c("IUCN_Code", "Resilience", "PriceCateg")
getInfo <- function(speciesList) {
speciesTable <- species(speciesList, fields = speciesFields)
stockTable <- stocks(speciesList, fields = stockFields)
outputTable <- merge(speciesTable, stockTable)
return(outputTable)
}
getInfo(humphead)
getInfo <- function(speciesList) {
speciesTable <- species(speciesList, fields = speciesFields)
stockTable <- stocks(speciesList, fields = stockFields)
outputTable <- merge(stockTable, speciesTable)
return(outputTable)
}
getInfo(humphead)
wrassData <- lapply(wrasses, getInfo)
ptm <- proc.time()
wrassData <- lapply(wrasses, getInfo)
proc.time() - ptm
565/60
wrassData[[1]]
wrassData[[1]]$sciname
wrasseData <- wrassData
unlist(wrasses)
wrassFamilies <- c("Labridae", "Scaridae", "Odacidae")
wrasses <- lapply(wrassFamilies, function(x) species_list(Family = x))
wrasses <- unlist(wrasses)
getInfo <- function(speciesList) {
speciesTable <- species(speciesList, fields = speciesFields)
stockTable <- stocks(speciesList, fields = stockFields)
outputTable <- merge(stockTable, speciesTable)
return(outputTable)
}
wrasseData <- getInfo(wrasses)
head(wrasseData)
write.csv(wrasseData, file = './wrasseData_09-06-2016.csv')
getwd()
setwd('/Users/hannah/Dropbox/Westneat_Lab/RFishBase/')
write.csv(wrasseData, file = './wrasseData_09-06-2016.csv')
wrasseData$DepthRangeDeep==NA
is.na(wrasseData$DepthRangeDeep)
is.na(wrasseData$Length)
is.na(wrasseData$DepthRangeDeep)[19]
is.na(wrasseData$Length)[19]
is.na(wrasseData$DepthRangeDeep)[19] & is.na(wrasseData$Length)[19]
is.na(wrasseData$DepthRangeDeep)[19] | is.na(wrasseData$Length)[19]
is.na(wrasseData$DepthRangeDeep)[19] | is.na(wrasseData$DepthRangeShallow)[19]
depthDeep <- is.na(wrasseData$DepthRangeDeep)
depthShallow <- is.na(wrasseData$DepthRangeShallow)
lengths <- is.na(wrasseData$Length)
wrasseData[(depthDeep | depthShallow | lengths), ]
test <- wrasseData[(depthDeep | depthShallow | lengths), ]
dim(test)
dim(wrasseData)
head(test)
test[1,]
test <- wrasseData[(depthDeep | depthShallow | lengths), c(1:4, 7:8, 11, 19)]
head(test)
write.csv(x=wrasseData[(depthDeep | depthShallow | lengths), c(1:4, 7:8, 11, 19)], file = './wrasseMissing.csv')
getwd()
head(test)
names(wrasseData)
write.csv(x=wrasseData[(depthDeep | depthShallow | lengths), c(1, 7:8, 11)], file = './wrasseMissing.csv')
write.csv(x=wrasseData[(depthDeep | depthShallow | lengths), c(1, 7:8, 11)], file = './wrasseMissing.csv', colnames=FALSE)
write.csv(x=wrasseData[(depthDeep | depthShallow | lengths), c(1, 7:8, 11)], file = './wrasseMissing.csv', col.names = FALSE)
